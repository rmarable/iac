{{- if .Values.service.enabled -}}
apiVersion: networking.k8s.io/v1beta1
kind: Ingress

metadata:
  name: {{ template "appname" . }}
  labels:
    app: {{ template "appname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version| replace "+" "_" }}"
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    sandboxId: "{{ .Values.biomageCi.sandboxId }}"

  annotations:
{{- if .Values.ingress.annotations }}
{{ toYaml .Values.ingress.annotations | indent 4 }}
{{- end }}
{{- if .Values.ingress.tls.enabled }}
    alb.ingress.kubernetes.io/actions.ssl-redirect: >-
      {"Type": "redirect", "RedirectConfig": { "Protocol": "HTTPS", "Port":
      "443", "StatusCode": "HTTP_301"}}
    alb.ingress.kubernetes.io/certificate-arn: >-
      arn:aws:acm:us-east-2:776724186643:certificate/dbf65af1-ca1d-4055-bbd7-04a8c3894347
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS":443}]'
{{- end }}
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/success-codes: {{ .Values.loadBalancerHealthCheck.successCodes }}
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: "{{ .Values.loadBalancerHealthCheck.periodSeconds }}"
    alb.ingress.kubernetes.io/healthcheck-timeout-seconds: "{{ .Values.loadBalancerHealthCheck.timeoutSeconds }}"
    alb.ingress.kubernetes.io/healthcheck-path: {{ .Values.loadBalancerHealthCheck.path }}
    alb.ingress.kubernetes.io/healthcheck-protocol: {{ .Values.loadBalancerHealthCheck.scheme }}
    alb.ingress.kubernetes.io/healthy-threshold-count: "{{ .Values.loadBalancerHealthCheck.successThreshold }}"
    alb.ingress.kubernetes.io/unhealthy-threshold-count: "{{ .Values.loadBalancerHealthCheck.failureThreshold }}"
    alb.ingress.kubernetes.io/group.name: {{ .Values.kubernetes.env }}
spec:
  rules:
  - host: {{ template "hostname" . }}
    http:
      &httpRule
      paths:
{{- if .Values.ingress.tls.enabled }}
      - path: /*
        backend:
          serviceName: ssl-redirect
          servicePort: use-annotation
{{- end }}
      - path: /*
        backend:
          serviceName: {{ template "appname" . }}
          servicePort: {{ .Values.service.externalPort }}
{{- if .Values.service.additionalHosts }}
{{- range $host := .Values.service.additionalHosts }}
  - host: {{ $host }}
    http:
      <<: *httpRule
{{- end -}}
{{- end -}}
{{- end -}}
